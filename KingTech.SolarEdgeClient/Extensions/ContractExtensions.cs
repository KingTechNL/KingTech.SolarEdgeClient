using KingTech.SolarEdgeClient.Contracts;
using KingTech.SolarEdgeClient.Modbus.Devices;

namespace KingTech.SolarEdgeClient.Extensions;

public static class ContractExtensions
{

    public static InverterContract ToContract(this Inverter inverter) =>
        new()
        {
            Manufacturer = inverter.Manufacturer,
            Model = inverter.Model,
            Version = inverter.Version,
            SerialNumber = inverter.SerialNumber,
            DeviceAddress = inverter.DeviceAddress,
            Type = inverter.Type,
            AcCurrent = inverter.AcCurrent,
            AcCurrentP1 = inverter.AcCurrentP1,
            AcCurrentP2 = inverter.AcCurrentP2,
            AcCurrentP3 = inverter.AcCurrentP3,
            AcVoltageP1ToP2 = inverter.AcVoltageP1ToP2,
            AcVoltageP2ToP3 = inverter.AcVoltageP2ToP3,
            AcVoltageP3ToP1 = inverter.AcVoltageP3ToP1,
            AcVoltageP1 = inverter.AcVoltageP1,
            AcVoltageP2 = inverter.AcVoltageP2,
            AcVoltageP3 = inverter.AcVoltageP3,
            AcPower = inverter.AcPower,
            AcFrequency = inverter.AcFrequency,
            AcPowerApparent = inverter.AcPowerApparent,
            AcPowerReactive = inverter.AcPowerReactive,
            AcPowerFactor = inverter.AcPowerFactor,
            AcTotalEnergyProduced = inverter.AcTotalEnergyProduced,
            DcCurrent = inverter.DcCurrent,
            DcVoltage = inverter.DcVoltage,
            DcPower = inverter.DcPower,
            HeatSinkTemperature = inverter.HeatSinkTemperature,
            Status = inverter.Status,
            VendorStatus = inverter.VendorStatus,
        };

    public static MeterContract ToContract(this Meter meter) =>
        new()
        {
            Manufacturer = meter.Manufacturer,
            Model = meter.Model,
            Option = meter.Option,
            Version = meter.Version,
            SerialNumber = meter.SerialNumber,
            DeviceAddress = meter.DeviceAddress,
            Type = meter.Type,
            AcCurrent = meter.AcCurrent,
            AcCurrentP1 = meter.AcCurrentP1,
            AcCurrentP2 = meter.AcCurrentP2,
            AcCurrentP3 = meter.AcCurrentP3,
            AcVoltageAvg = meter.AcVoltageAvg,
            AcVoltageP1 = meter.AcVoltageP1,
            AcVoltageP2 = meter.AcVoltageP2,
            AcVoltageP3 = meter.AcVoltageP3,
            AcVoltageLineToLineAvg = meter.AcVoltageLineToLineAvg,
            AcVoltageP1ToP2 = meter.AcVoltageP1ToP2,
            AcVoltageP2ToP3 = meter.AcVoltageP2ToP3,
            AcVoltageP3ToP1 = meter.AcVoltageP3ToP1,
            AcFrequency = meter.AcFrequency,
            AcPower = meter.AcPower,
            AcPowerP1 = meter.AcPowerP1,
            AcPowerP2 = meter.AcPowerP2,
            AcPowerP3 = meter.AcPowerP3,
            AcPowerApparent = meter.AcPowerApparent,
            AcPowerApparentP1 = meter.AcPowerApparentP1,
            AcPowerApparentP2 = meter.AcPowerApparentP2,
            AcPowerApparentP3 = meter.AcPowerApparentP3,
            AcPowerReactive = meter.AcPowerReactive,
            AcPowerReactiveP1 = meter.AcPowerReactiveP1,
            AcPowerReactiveP2 = meter.AcPowerReactiveP2,
            AcPowerReactiveP3 = meter.AcPowerReactiveP3,
            AcPowerFactor = meter.AcPowerFactor,
            AcPowerFactorP1 = meter.AcPowerFactorP1,
            AcPowerFactorP2 = meter.AcPowerFactorP2,
            AcPowerFactorP3 = meter.AcPowerFactorP3,
            ExportedEnergy = meter.ExportedEnergy,
            ExportedEnergyP1 = meter.ExportedEnergyP1,
            ExportedEnergyP2 = meter.ExportedEnergyP2,
            ExportedEnergyP3 = meter.ExportedEnergyP3,
            ImportedEnergy = meter.ImportedEnergy,
            ImportedEnergyP1 = meter.ImportedEnergyP1,
            ImportedEnergyP2 = meter.ImportedEnergyP2,
            ImportedEnergyP3 = meter.ImportedEnergyP3,
            ExportedEnergyApparent = meter.ExportedEnergyApparent,
            ExportedEnergyApparentP1 = meter.ExportedEnergyApparentP1,
            ExportedEnergyApparentP2 = meter.ExportedEnergyApparentP2,
            ExportedEnergyApparentP3 = meter.ExportedEnergyApparentP3,
            ImportedEnergyApparent = meter.ImportedEnergyApparent,
            ImportedEnergyApparentP1 = meter.ImportedEnergyApparentP1,
            ImportedEnergyApparentP2 = meter.ImportedEnergyApparentP2,
            ImportedEnergyApparentP3 = meter.ImportedEnergyApparentP3,
            ImportedEnergyReactiveQ1 = meter.ImportedEnergyReactiveQ1,
            ImportedEnergyReactiveQ1P1 = meter.ImportedEnergyReactiveQ1P1,
            ImportedEnergyReactiveQ1P2 = meter.ImportedEnergyReactiveQ1P2,
            ImportedEnergyReactiveQ1P3 = meter.ImportedEnergyReactiveQ1P3,
            ImportedEnergyReactiveQ2 = meter.ImportedEnergyReactiveQ2,
            ImportedEnergyReactiveQ2P1 = meter.ImportedEnergyReactiveQ2P1,
            ImportedEnergyReactiveQ2P2 = meter.ImportedEnergyReactiveQ2P2,
            ImportedEnergyReactiveQ2P3 = meter.ImportedEnergyReactiveQ2P3,
            ExportedEnergyReactiveQ3 = meter.ExportedEnergyReactiveQ3,
            ExportedEnergyReactiveQ3P1 = meter.ExportedEnergyReactiveQ3P1,
            ExportedEnergyReactiveQ3P2 = meter.ExportedEnergyReactiveQ3P2,
            ExportedEnergyReactiveQ3P3 = meter.ExportedEnergyReactiveQ3P3,
            ExportedEnergyReactiveQ4 = meter.ExportedEnergyReactiveQ4,
            ExportedEnergyReactiveQ4P1 = meter.ExportedEnergyReactiveQ4P1,
            ExportedEnergyReactiveQ4P2 = meter.ExportedEnergyReactiveQ4P2,
            ExportedEnergyReactiveQ4P3 = meter.ExportedEnergyReactiveQ4P3,
            Events = meter.Events,
        };

    public static BatteryContract ToContract(this Battery battery) =>
        new()
        {
            Manufacturer = battery.Manufacturer,
            Model = battery.Model,
            Version = battery.Version,
            SerialNumber = battery.SerialNumber,
            DeviceAddress = battery.DeviceAddress,
            RatedCapacity = battery.RatedCapacity,
            MaxChargeContinuousPower = battery.MaxChargeContinuousPower,
            MaxDischargeContinuousPower = battery.MaxDischargeContinuousPower,
            MaxChargePeakPower = battery.MaxChargePeakPower,
            MaxDischargePeakPower = battery.MaxDischargePeakPower,
            AvgTemperature = battery.AvgTemperature,
            MaxTemperature = battery.MaxTemperature,
            Voltage = battery.Voltage,
            Current = battery.Current,
            Power = battery.Power,
            LifetimeExportedEnergy = battery.LifetimeExportedEnergy,
            LifetimeImportedEnergy = battery.LifetimeImportedEnergy,
            Capacity = battery.Capacity,
            Charge = battery.Charge,
            CapacityPercent = battery.CapacityPercent,
            ChargePercent = battery.ChargePercent,
            Status = battery.Status,
            VendorStatus = battery.VendorStatus,
            LastEvent = battery.LastEvent,
        };
}